<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Enkoni.Framework.ServiceModel</name>
    </assembly>
    <members>
        <member name="T:Enkoni.Framework.ServiceModel.Extensions">
            <summary>This class contains some extension-methods that apply to ServiceModel-related types.</summary>
        </member>
        <member name="M:Enkoni.Framework.ServiceModel.Extensions.SafeClose(System.ServiceModel.ICommunicationObject)">
            <summary>Tries to gracefully close the communication object with regards for the current state of the communications object. If this fails due 
            to a <see cref="T:System.ServiceModel.CommunicationException"/> or a <see cref="T:System.TimeoutException"/>, it aborts the connection. If another exception is raised during 
            the closing of the communication channel, the connection is still aborted but after the channel has been aborted the exception is rethrown.
            </summary>
            <param name="source">The communication object that must be closed.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> is null.</exception>
        </member>
        <member name="T:Enkoni.Framework.ServiceModel.Properties.LogMessages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Enkoni.Framework.ServiceModel.Properties.LogMessages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Enkoni.Framework.ServiceModel.Properties.LogMessages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Enkoni.Framework.ServiceModel.Properties.LogMessages.WarningReceivedMessageIsInvalid">
            <summary>
              Looks up a localized string similar to The message that was received from the client does not comply with the XML schema.
            </summary>
        </member>
        <member name="T:Enkoni.Framework.ServiceModel.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Enkoni.Framework.ServiceModel.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Enkoni.Framework.ServiceModel.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Enkoni.Framework.ServiceModel.Properties.Resources.MessageDoesNotComplyWithSchema">
            <summary>
              Looks up a localized string similar to The received message does not comply with the required schema.
            </summary>
        </member>
        <member name="T:Enkoni.Framework.ServiceModel.SchemaValidationBehavior">
            <summary>This class implements a custom endpoint behavior that validates the received message using a separate XSD schema.</summary>
            <remarks>The implementation is based on the code of Microsoft (<see href="http://msdn.microsoft.com/en-us/library/ff647820.aspx"/>).</remarks>
        </member>
        <member name="F:Enkoni.Framework.ServiceModel.SchemaValidationBehavior.schemaSet">
            <summary>The set of schemas that are used for the validation of received messages.</summary>
        </member>
        <member name="M:Enkoni.Framework.ServiceModel.SchemaValidationBehavior.#ctor(System.Boolean,System.Xml.Schema.XmlSchemaSet)">
            <summary>Initializes a new instance of the <see cref="T:Enkoni.Framework.ServiceModel.SchemaValidationBehavior"/> class.</summary>
            <param name="enabled">Indicates whether or not the behavior is enabled.</param>
            <param name="schemaSet">Defines the schemas that must be used.</param>
        </member>
        <member name="M:Enkoni.Framework.ServiceModel.SchemaValidationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
            <summary>Implements a modification or extension of the service across an endpoint.</summary>
            <param name="endpoint">The endpoint that exposes the contract.</param>
            <param name="endpointDispatcher">The endpoint dispatcher to be modified or extended.</param>
        </member>
        <member name="M:Enkoni.Framework.ServiceModel.SchemaValidationBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Implement to pass data at runtime to bindings to support custom behavior.</summary>
            <param name="endpoint">The endpoint to modify.</param>
            <param name="bindingParameters">The objects that binding elements require to support the behavior.</param>
        </member>
        <member name="M:Enkoni.Framework.ServiceModel.SchemaValidationBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
            <summary>Implements a modification or extension of the client across an endpoint.</summary>
            <param name="endpoint">The endpoint that is to be customized.</param>
            <param name="clientRuntime">The client runtime to be customized.</param>
        </member>
        <member name="M:Enkoni.Framework.ServiceModel.SchemaValidationBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
            <summary>Implement to confirm that the endpoint meets some intended criteria.</summary>
            <param name="endpoint">The endpoint to validate.</param>
        </member>
        <member name="M:Enkoni.Framework.ServiceModel.SchemaValidationBehavior.CreateMessageInspector(System.Xml.Schema.XmlSchemaSet)">
            <summary>Returns a new instance of the <see cref="T:Enkoni.Framework.ServiceModel.SchemaValidationMessageInspector"/> class or a subclass.</summary>
            <param name="schemas">The schemas that must be used.</param>
            <returns>The created instance.</returns>
        </member>
        <member name="P:Enkoni.Framework.ServiceModel.SchemaValidationBehavior.Enabled">
            <summary>Gets or sets a value indicating whether the behavior is enabled or not.</summary>
        </member>
        <member name="T:Enkoni.Framework.ServiceModel.SchemaValidationBehaviorExtensionElement">
            <summary>Implements a behavior extension element with which a <see cref="T:Enkoni.Framework.ServiceModel.SchemaValidationBehavior"/> can be connected to an endpoint through 
            configuration.</summary>
            <remarks>The implementation is based on the code of Microsoft (<see href="http://msdn.microsoft.com/en-us/library/ff647820.aspx"/>).</remarks>
        </member>
        <member name="F:Enkoni.Framework.ServiceModel.SchemaValidationBehaviorExtensionElement.EnabledAttributeName">
            <summary>Defines the name of the 'enabled'-configuration attribute.</summary>
        </member>
        <member name="F:Enkoni.Framework.ServiceModel.SchemaValidationBehaviorExtensionElement.SchemaFileAttributeName">
            <summary>Defines the name of the 'schema'-configuration attribute.</summary>
        </member>
        <member name="M:Enkoni.Framework.ServiceModel.SchemaValidationBehaviorExtensionElement.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Enkoni.Framework.ServiceModel.SchemaValidationBehaviorExtensionElement"/> class.</summary>
        </member>
        <member name="M:Enkoni.Framework.ServiceModel.SchemaValidationBehaviorExtensionElement.CreateBehavior">
            <summary>Creates a new instance of the behavior.</summary>
            <returns>The created behavior.</returns>
        </member>
        <member name="M:Enkoni.Framework.ServiceModel.SchemaValidationBehaviorExtensionElement.CreateBehavior(System.Boolean,System.Xml.Schema.XmlSchemaSet)">
            <summary>Returns a new instance of the <see cref="T:Enkoni.Framework.ServiceModel.SchemaValidationBehavior"/> class or a subclass.</summary>
            <param name="enabled">Indicates whether or not the behavior is enabled.</param>
            <param name="schemas">Defines the schemas that must be used.</param>
            <returns>The created instance of the behavior.</returns>
        </member>
        <member name="P:Enkoni.Framework.ServiceModel.SchemaValidationBehaviorExtensionElement.Enabled">
            <summary>Gets or sets a value indicating whether the behavior must be enabled or not.</summary>
        </member>
        <member name="P:Enkoni.Framework.ServiceModel.SchemaValidationBehaviorExtensionElement.SchemaFile">
            <summary>Gets or sets the location of the schema file that must be used.</summary>
        </member>
        <member name="P:Enkoni.Framework.ServiceModel.SchemaValidationBehaviorExtensionElement.BehaviorType">
            <summary>Gets the type of behavior that is handled by this extension element.</summary>
        </member>
        <member name="T:Enkoni.Framework.ServiceModel.SchemaValidationMessageInspector">
            <summary>Implements a message inspector that inspects a received message.</summary>
        </member>
        <member name="F:Enkoni.Framework.ServiceModel.SchemaValidationMessageInspector.schemas">
            <summary>The schemas that are used to validate the messages.</summary>
        </member>
        <member name="M:Enkoni.Framework.ServiceModel.SchemaValidationMessageInspector.#ctor(System.Xml.Schema.XmlSchemaSet)">
            <summary>Initializes a new instance of the <see cref="T:Enkoni.Framework.ServiceModel.SchemaValidationMessageInspector"/> class.</summary>
            <param name="schemas">The schemas that are to be used.</param>
        </member>
        <member name="M:Enkoni.Framework.ServiceModel.SchemaValidationMessageInspector.AfterReceiveRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel,System.ServiceModel.InstanceContext)">
            <summary>Called after an inbound message has been received but before the message is dispatched to the intended operation.</summary>
            <param name="request">The request message.</param>
            <param name="channel">The incoming channel.</param>
            <param name="instanceContext">The current service instance.</param>
            <returns>The object used to correlate state. This object is passed back in the BeforeSendReply(Message@,object) method.</returns>
        </member>
        <member name="M:Enkoni.Framework.ServiceModel.SchemaValidationMessageInspector.BeforeSendReply(System.ServiceModel.Channels.Message@,System.Object)">
            <summary>Called after the operation has returned but before the reply message is sent.</summary>
            <param name="reply">The reply message. This value is null if the operation is one way.</param>
            <param name="correlationState">The correlation object returned from the AfterReceiveRequest(Message@,IClientChannel,InstanceContext) method.
            </param>
        </member>
        <member name="M:Enkoni.Framework.ServiceModel.SchemaValidationMessageInspector.OnPreValidation(System.ServiceModel.Channels.Message,System.ServiceModel.IClientChannel,System.ServiceModel.InstanceContext)">
            <summary>When overriden executes some logic before starting the validation.</summary>
            <param name="receivedMessage">The request message.</param>
            <param name="channel">The incoming channel.</param>
            <param name="instanceContext">The current service instance.</param>
        </member>
        <member name="M:Enkoni.Framework.ServiceModel.SchemaValidationMessageInspector.OnValidationError(System.ServiceModel.Channels.Message,System.ServiceModel.IClientChannel,System.ServiceModel.InstanceContext,System.Xml.Schema.XmlSchemaValidationException)">
            <summary>Executes some logic when the validation of the received message failed. By default a warning log message is emitted.</summary>
            <param name="receivedMessage">The request message.</param>
            <param name="channel">The incoming channel.</param>
            <param name="instanceContext">The current service instance.</param>
            <param name="validationException">The exception that was thrown by the validation logic.</param>
        </member>
        <member name="M:Enkoni.Framework.ServiceModel.SchemaValidationMessageInspector.OnValidationSuccess(System.ServiceModel.Channels.Message,System.ServiceModel.IClientChannel,System.ServiceModel.InstanceContext)">
            <summary>When overriden executes some logic after the validation was completed successfully.</summary>
            <param name="receivedMessage">The request message.</param>
            <param name="channel">The incoming channel.</param>
            <param name="instanceContext">The current service instance.</param>
        </member>
        <member name="M:Enkoni.Framework.ServiceModel.SchemaValidationMessageInspector.ValidateMessage(System.ServiceModel.Channels.Message)">
            <summary>Validates the message using the supplied XSD-schemas.</summary>
            <param name="message">The message that is to be validated.</param>
            <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">The body of the message does not comply with the schema.</exception>
        </member>
    </members>
</doc>
