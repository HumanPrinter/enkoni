<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Enkoni.Framework.DataAnnotations</name>
    </assembly>
    <members>
        <member name="T:Enkoni.Framework.DataAnnotations.PhoneNumberCategories">
            <summary>Defines the supported categories of phone numbers for the <see cref="T:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute"/>.</summary>
        </member>
        <member name="F:Enkoni.Framework.DataAnnotations.PhoneNumberCategories.None">
            <summary>Match no phone numbers.</summary>
        </member>
        <member name="F:Enkoni.Framework.DataAnnotations.PhoneNumberCategories.Regular">
            <summary>Match only regular phone numbers.</summary>
        </member>
        <member name="F:Enkoni.Framework.DataAnnotations.PhoneNumberCategories.Mobile">
            <summary>Match only mobile phone numbers.</summary>
        </member>
        <member name="F:Enkoni.Framework.DataAnnotations.PhoneNumberCategories.Service">
            <summary>Match only service phone numbers.</summary>
        </member>
        <member name="F:Enkoni.Framework.DataAnnotations.PhoneNumberCategories.Emergency">
            <summary>Match only emergency phone numbers.</summary>
        </member>
        <member name="F:Enkoni.Framework.DataAnnotations.PhoneNumberCategories.Other">
            <summary>Match phone numbers that to not fall into the other categories.</summary>
        </member>
        <member name="F:Enkoni.Framework.DataAnnotations.PhoneNumberCategories.Default">
            <summary>Match regular and mobile phone numbers.</summary>
        </member>
        <member name="F:Enkoni.Framework.DataAnnotations.PhoneNumberCategories.All">
            <summary>Match all phone numbers.</summary>
        </member>
        <member name="T:Enkoni.Framework.DataAnnotations.EmailCategory">
            <summary>Defines the supported categories of e-mail addresses for the <see cref="T:Enkoni.Framework.DataAnnotations.EmailAttribute"/>.</summary>
        </member>
        <member name="F:Enkoni.Framework.DataAnnotations.EmailCategory.Basic">
            <summary>Match basic e-mail addresses only. Basic e-mail addresses may contain alfa numeric characters and the '-' and '_' characters.</summary>
        </member>
        <member name="F:Enkoni.Framework.DataAnnotations.EmailCategory.Extended">
            <summary>Match all e-mail addresses except e-mail addresses that contain quoted strings.</summary>
        </member>
        <member name="F:Enkoni.Framework.DataAnnotations.EmailCategory.Complete">
            <summary>Match all e-mail addresses according to RFC5322.</summary>
        </member>
        <member name="T:Enkoni.Framework.DataAnnotations.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Properties.Resources.AreaCodes_NL">
            <summary>
              Looks up a localized string similar to 10;13;15;20;23;24;26;30;33;35;36;38;40;43;45;46;50;53;55;58;70;71;72;73;74;75;76;77;78;79;88;111;113;114;115;117;118;161;162;164;165;166;167;168;172;174;180;181;182;183;184;186;187;222;223;224;226;227;228;229;251;252;255;294;297;299;313;314;315;316;317;318;320;321;341;342;343;344;345;346;347;348;411;412;413;416;418;475;478;481;485;486;487;488;492;493;495;497;499;511;512;513;514;515;516;517;518;519;521;522;523;524;525;527;528;529;541;543;544;545;546;547;548;561;562;566;570;571;572;573;575;577;578;591;592;593 [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Properties.Resources.RegularRegexPattern_NL">
            <summary>
              Looks up a localized string similar to ^((((((\+|00)31(\(0\))?({0}))|(0({0})))-?)|(\(0({0})\)))[2-8]\d{{6}}|(((((\+|00)31(\(0\))?({1}))|(0({1})))-?)|(\(0({1})\)))[2-8]\d{{5}})$.
            </summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Properties.Resources.RegularRegexPatternNoCountryAccessCode_NL">
            <summary>
              Looks up a localized string similar to ^(((((0({0})))-?)|(\(0({0})\)))[2-8]\d{{6}}|((((0({1})))-?)|(\(0({1})\)))[2-8]\d{{5}})$.
            </summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Properties.Resources.RegularRegexPatternNoCountryAccessCodeWithCarrierPreselect_NL">
            <summary>
              Looks up a localized string similar to ^((((16\d{{2}})|(10[0-5,7-9]\d{{2}}))?((((0({0})))-?)|(\(0({0})\)))[2-8]\d{{6}})|(((16\d{{2}})|(10[0-5,7-9]\d{{2}}))?((((0({1})))-?)|(\(0({1})\)))[2-8]\d{{5}}))$.
            </summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Properties.Resources.RegularRegexPatternWithCarrierPreselect_NL">
            <summary>
              Looks up a localized string similar to ^(((((((\+|(((16\d{{2}})|(10[0-5,7-9]\d{{2}}))?)00)31(\(0\))?({0}))|((((16\d{{2}})|(10[0-5,7-9]\d{{2}}))?)0({0})))-?)|((((16\d{{2}})|(10[0-5,7-9]\d{{2}}))?)\(0({0})\)))[2-8]\d{{6}})|((((((\+|(((16\d{{2}})|(10[0-5,7-9]\d{{2}}))?)00)31(\(0\))?({1}))|((((16\d{{2}})|(10[0-5,7-9]\d{{2}}))?)0({1})))-?)|((((16\d{{2}})|(10[0-5,7-9]\d{{2}}))?)\(0({1})\)))[2-8]\d{{5}}))$.
            </summary>
        </member>
        <member name="T:Enkoni.Framework.DataAnnotations.Configuration.EmailDomainConfigElement">
            <summary>Defines the configuration element that holds a single domain that should either be included or excluded from the list of domains
            that must be validated by the <see cref="T:Enkoni.Framework.DataAnnotations.EmailAttribute"/>.</summary>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.EmailDomainConfigElement.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Enkoni.Framework.DataAnnotations.Configuration.EmailDomainConfigElement"/> class.</summary>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.EmailDomainConfigElement.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:Enkoni.Framework.DataAnnotations.Configuration.EmailDomainConfigElement"/> class using the specified area code.</summary>
            <param name="pattern">The pattern that must be added to the list.</param>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Configuration.EmailDomainConfigElement.Pattern">
            <summary>Gets or sets the pattern that is set through this element.</summary>
        </member>
        <member name="T:Enkoni.Framework.DataAnnotations.Configuration.EmailDomainCollection">
            <summary>Defines the configuration element collection that holds the domains that should either be included or excluded from the list of domains
            that must be validated by the <see cref="T:Enkoni.Framework.DataAnnotations.EmailAttribute"/>.</summary>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.EmailDomainCollection.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Enkoni.Framework.DataAnnotations.Configuration.EmailDomainCollection"/> class.</summary>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.EmailDomainCollection.CreateNewElement">
            <summary>Creates a new <see cref="T:System.Configuration.ConfigurationElement"/>.</summary>
            <returns>A new <see cref="T:System.Configuration.ConfigurationElement"/>.</returns>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.EmailDomainCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>Gets the element key for a specified configuration element.</summary>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"/> to return the key for.</param>
            <returns>An <see langword="object"/> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"/>.</returns>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Configuration.EmailDomainCollection.CollectionType">
            <summary>Gets the type of the <see cref="T:System.Configuration.ConfigurationElementCollection"/>.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Configuration.EmailDomainCollection.ElementName">
            <summary>Gets the name used to identify this collection of elements in the configuration file.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Configuration.EmailDomainCollection.Item(System.Int32)">
            <summary>Gets or sets a property, attribute, or child element of this configuration element.</summary>
            <param name="index">The index of the <see cref="T:Enkoni.Framework.DataAnnotations.Configuration.EmailDomainConfigElement"/> to access.</param>
            <returns>The specified property, attribute, or child element.</returns>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Configuration.EmailDomainCollection.Item(System.String)">
            <summary>Gets or sets a property, attribute, or child element of this configuration element.</summary>
            <param name="pattern">The pattern of the <see cref="T:Enkoni.Framework.DataAnnotations.Configuration.EmailDomainConfigElement"/> to access.</param>
            <returns>The specified property, attribute, or child element.</returns>
        </member>
        <member name="T:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberAreaCodeCollection">
            <summary>Defines the configuration element collection that holds the area codes that should either be added or removed from the list of area
            codes that must be validated by the <see cref="T:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute"/>.</summary>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberAreaCodeCollection.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberAreaCodeCollection"/> class.</summary>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberAreaCodeCollection.IndexOf(Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberAreaCodeConfigElement)">
            <summary>Gets the index of the specified element.</summary>
            <param name="element">The element of which the index must be returned.</param>
            <returns>The index of the element.</returns>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberAreaCodeCollection.Add(Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberAreaCodeConfigElement)">
            <summary>Adds an element to the collection.</summary>
            <param name="element">The element that must be added.</param>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberAreaCodeCollection.Remove(Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberAreaCodeConfigElement)">
            <summary>Removes an element from the collection.</summary>
            <param name="element">The element that must be removed.</param>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberAreaCodeCollection.Remove(System.String)">
            <summary>Removes an element from the collection.</summary>
            <param name="areaCode">The key of the element that must be removed.</param>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberAreaCodeCollection.RemoveAt(System.Int32)">
            <summary>Removes an element from the collection.</summary>
            <param name="index">The index of the element that must be removed.</param>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberAreaCodeCollection.Clear">
            <summary>Clears the collection.</summary>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberAreaCodeCollection.CreateNewElement">
            <summary>Creates a new <see cref="T:System.Configuration.ConfigurationElement"/>.</summary>
            <returns>A new <see cref="T:System.Configuration.ConfigurationElement"/>.</returns>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberAreaCodeCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>Gets the element key for a specified configuration element.</summary>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"/> to return the key for.</param>
            <returns>An <see langword="object"/> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"/>.</returns>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberAreaCodeCollection.BaseAdd(System.Configuration.ConfigurationElement)">
            <summary>Adds a configuration element to the collection.</summary>
            <param name="element">The element to add.</param>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberAreaCodeCollection.CollectionType">
            <summary>Gets the type of the <see cref="T:System.Configuration.ConfigurationElementCollection"/>.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberAreaCodeCollection.Item(System.Int32)">
            <summary>Gets or sets a property, attribute, or child element of this configuration element.</summary>
            <param name="index">The index of the <see cref="T:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberAreaCodeConfigElement"/> to access.</param>
            <returns>The specified property, attribute, or child element.</returns>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberAreaCodeCollection.Item(System.String)">
            <summary>Gets or sets a property, attribute, or child element of this configuration element.</summary>
            <param name="areaCode">The area code of the <see cref="T:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberAreaCodeConfigElement"/> to access.</param>
            <returns>The specified property, attribute, or child element.</returns>
        </member>
        <member name="T:Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigElement">
            <summary>Defines the configuration element that can be used to configure the <see cref="T:Enkoni.Framework.DataAnnotations.EmailAttribute"/>.</summary>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigElement.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigElement"/> class.</summary>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigElement.ReadFromConfig(System.Xml.XmlReader,System.Boolean)">
            <summary>Reads XML from the configuration file.</summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> that reads from the configuration file.</param>
            <param name="serializeCollectionKey"><see langword="true"/> to serialize only the collection key properties; otherwise, 
            <see langword="false"/>.</param>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigElement.Name">
            <summary>Gets or sets the name of the validator.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigElement.AllowComments">
            <summary>Gets or sets a value indicating whether comments are allowed in the e-mail address.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigElement.AllowIPAddresses">
            <summary>Gets or sets a value indicating whether IP addresses are allowed as domain part.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigElement.RequireTopLevelDomain">
            <summary>Gets or sets a value indicating whether the domain part must contain a top level domain.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigElement.IncludeDomains">
            <summary>Gets the collection of domains that are white listed.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigElement.ExcludeDomains">
            <summary>Gets the collection of domains that are black listed.</summary>
        </member>
        <member name="T:Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigDictionary">
            <summary>Defines a custom dictionary that holds the <see cref="T:Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigElement"/> that were read from the configuration 
            file.</summary>
        </member>
        <member name="F:Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigDictionary.storage">
            <summary>The actual storage.</summary>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigDictionary.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigDictionary"/> class.</summary>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigDictionary.Add(System.String,Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigElement)">
            <summary>Adds an element with the provided key and value to the <see cref="T:System.Collections.Generic.IDictionary`2"/>.</summary>
            <param name="key">The object to use as the key of the element to add.</param>
            <param name="value">The object to use as the value of the element to add.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">An element with the same key already exists in the <see cref="T:System.Collections.Generic.IDictionary`2"/>.</exception>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigElement})">
            <summary>Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigElement})">
            <summary>Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.</summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns><see langword="true"/> if item is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigDictionary.ContainsKey(System.String)">
            <summary>Determines whether the <see cref="T:System.Collections.Generic.IDictionary`2"/> contains an element with the specified key.</summary>
            <param name="key">The key to locate in the <see cref="T:System.Collections.Generic.IDictionary`2"/>.</param>
            <returns><see langword="true"/> if the <see cref="T:System.Collections.Generic.IDictionary`2"/> contains an element with the key; otherwise, 
            <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigDictionary.Remove(System.String)">
            <summary>Removes the element with the specified key from the <see cref="T:System.Collections.Generic.IDictionary`2"/>.</summary>
            <param name="key">The key of the element to remove.</param>
            <returns><see langword="true"/> if the element is successfully removed; otherwise, <see langword="false"/>. This method also returns 
            <see langword="false"/> if <paramref name="key"/> was not found in the original <see cref="T:System.Collections.Generic.IDictionary`2"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigElement})">
            <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>.
            <returns><see langword="true"/> if item was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, <see langword="false"/>. 
            This method also returns <see langword="false"/> if item is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.</returns>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigDictionary.TryGetValue(System.String,Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigElement@)">
            <summary>Gets the value associated with the specified key.</summary>
            <param name="key">The key whose value to get.</param>
            <param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value 
            for the type of the value parameter. This parameter is passed uninitialized.</param>
            <returns><see langword="true"/> if the object that implements <see cref="T:System.Collections.Generic.IDictionary`2"/> contains an element with the specified 
            key; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigDictionary.Clear">
            <summary>Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</summary>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigElement}[],System.Int32)">
            <summary>Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> 
            index.</summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>.
            The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex"/> is less than 0.</exception>
            <exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from
            <paramref name="arrayIndex"/> to the end of the destination array.</exception>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigDictionary.GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigDictionary.Keys">
            <summary>Gets an <see cref="T:System.Collections.Generic.ICollection`1"/> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2"/>.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigDictionary.Values">
            <summary>Gets an <see cref="T:System.Collections.Generic.ICollection`1"/> containing the values of the <see cref="T:System.Collections.Generic.IDictionary`2"/>.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigDictionary.Count">
            <summary>Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigDictionary.IsReadOnly">
            <summary>Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Configuration.EmailValidationConfigDictionary.Item(System.String)">
            <summary>Gets or sets the element with the specified key.</summary>
            <param name="key">The key of the element to get or set.</param>
            <returns>The element with the specified key.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="T:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberValidationConfigDictionary">
            <summary>Defines a custom dictionary that holds the <see cref="T:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberValidationConfigElement"/> that were read from the configuration 
            file.</summary>
        </member>
        <member name="F:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberValidationConfigDictionary.storage">
            <summary>The actual storage.</summary>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberValidationConfigDictionary.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberValidationConfigDictionary"/> class.</summary>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberValidationConfigDictionary.Add(System.String,Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberValidationConfigElement)">
            <summary>Adds an element with the provided key and value to the <see cref="T:System.Collections.Generic.IDictionary`2"/>.</summary>
            <param name="key">The object to use as the key of the element to add.</param>
            <param name="value">The object to use as the value of the element to add.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">An element with the same key already exists in the <see cref="T:System.Collections.Generic.IDictionary`2"/>.</exception>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberValidationConfigDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberValidationConfigElement})">
            <summary>Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberValidationConfigDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberValidationConfigElement})">
            <summary>Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.</summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns><see langword="true"/> if item is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberValidationConfigDictionary.ContainsKey(System.String)">
            <summary>Determines whether the <see cref="T:System.Collections.Generic.IDictionary`2"/> contains an element with the specified key.</summary>
            <param name="key">The key to locate in the <see cref="T:System.Collections.Generic.IDictionary`2"/>.</param>
            <returns><see langword="true"/> if the <see cref="T:System.Collections.Generic.IDictionary`2"/> contains an element with the key; otherwise, 
            <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberValidationConfigDictionary.Remove(System.String)">
            <summary>Removes the element with the specified key from the <see cref="T:System.Collections.Generic.IDictionary`2"/>.</summary>
            <param name="key">The key of the element to remove.</param>
            <returns><see langword="true"/> if the element is successfully removed; otherwise, <see langword="false"/>. This method also returns 
            <see langword="false"/> if <paramref name="key"/> was not found in the original <see cref="T:System.Collections.Generic.IDictionary`2"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberValidationConfigDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberValidationConfigElement})">
            <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>.
            <returns><see langword="true"/> if item was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, <see langword="false"/>. 
            This method also returns <see langword="false"/> if item is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.</returns>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberValidationConfigDictionary.TryGetValue(System.String,Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberValidationConfigElement@)">
            <summary>Gets the value associated with the specified key.</summary>
            <param name="key">The key whose value to get.</param>
            <param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value 
            for the type of the value parameter. This parameter is passed uninitialized.</param>
            <returns><see langword="true"/> if the object that implements <see cref="T:System.Collections.Generic.IDictionary`2"/> contains an element with the specified 
            key; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberValidationConfigDictionary.Clear">
            <summary>Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</summary>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberValidationConfigDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberValidationConfigElement}[],System.Int32)">
            <summary>Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> 
            index.</summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>.
            The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex"/> is less than 0.</exception>
            <exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from
            <paramref name="arrayIndex"/> to the end of the destination array.</exception>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberValidationConfigDictionary.GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberValidationConfigDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberValidationConfigDictionary.Keys">
            <summary>Gets an <see cref="T:System.Collections.Generic.ICollection`1"/> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2"/>.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberValidationConfigDictionary.Values">
            <summary>Gets an <see cref="T:System.Collections.Generic.ICollection`1"/> containing the values of the <see cref="T:System.Collections.Generic.IDictionary`2"/>.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberValidationConfigDictionary.Count">
            <summary>Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberValidationConfigDictionary.IsReadOnly">
            <summary>Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberValidationConfigDictionary.Item(System.String)">
            <summary>Gets or sets the element with the specified key.</summary>
            <param name="key">The key of the element to get or set.</param>
            <returns>The element with the specified key.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="T:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberValidationConfigElement">
            <summary>Defines the configuration element that can be used to configure the <see cref="T:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute"/>.</summary>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberValidationConfigElement.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberValidationConfigElement"/> class.</summary>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberValidationConfigElement.ReadFromConfig(System.Xml.XmlReader,System.Boolean)">
            <summary>Reads XML from the configuration file.</summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> that reads from the configuration file.</param>
            <param name="serializeCollectionKey"><see langword="true"/> to serialize only the collection key properties; otherwise, 
            <see langword="false"/>.</param>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberValidationConfigElement.Name">
            <summary>Gets or sets the name of the validator.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberValidationConfigElement.AllowCountryCallingCode">
            <summary>Gets or sets a value indicating whether country calling codes are allowed by the validator.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberValidationConfigElement.AllowCarrierPreselect">
            <summary>Gets or sets a value indicating whether carrier preselect codes are allowed by the validator.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberValidationConfigElement.AreaCodes">
            <summary>Gets the collection of countries that must be used by the validator.</summary>
        </member>
        <member name="T:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberAreaCodeConfigElement">
            <summary>Defines the configuration element that holds a single area code that should either be added or removed from the list of area codes
            that must be validated by the <see cref="T:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute"/>.</summary>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberAreaCodeConfigElement.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberAreaCodeConfigElement"/> class.</summary>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberAreaCodeConfigElement.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberAreaCodeConfigElement"/> class using the specified area code.</summary>
            <param name="areaCode">The area code that must be added to the list.</param>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Configuration.DutchPhoneNumberAreaCodeConfigElement.AreaCode">
            <summary>Gets or sets the area code that is set through this element.</summary>
        </member>
        <member name="T:Enkoni.Framework.DataAnnotations.Configuration.ValidationSection">
            <summary>Defines the configuration section that can be used to configure the Enkoni validators.</summary>
        </member>
        <member name="F:Enkoni.Framework.DataAnnotations.Configuration.ValidationSection.DefaultSectionName">
            <summary>The default name for the ConfigurationSection in the config file.</summary>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.ValidationSection.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Enkoni.Framework.DataAnnotations.Configuration.ValidationSection"/> class.</summary>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.ValidationSection.IsReadOnly">
            <summary>Gets a value indicating whether the <see cref="T:System.Configuration.ConfigurationElement"/> object is read-only.</summary>
            <returns><see langword="false"/> as the configuration in this section can not be modified from code.</returns>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.Configuration.ValidationSection.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Reads XML from the configuration file.</summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> that reads from the configuration file.</param>
            <param name="serializeCollectionKey"><see langword="true"/> to serialize only the collection key properties; otherwise, <see langword="false"/>.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The element to read is locked.- or -An attribute of the current node is not recognized.- or -
            The lock status of the current node cannot be determined.</exception>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Configuration.ValidationSection.DutchPhoneNumberValidators">
            <summary>Gets the configurations for the <see cref="T:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute"/>s that were specified in the configuration file.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.Configuration.ValidationSection.EmailValidators">
            <summary>Gets the configurations for the <see cref="T:Enkoni.Framework.DataAnnotations.EmailAttribute"/>s that were specified in the configuration file.</summary>
        </member>
        <member name="T:Enkoni.Framework.DataAnnotations.EmailAttribute">
            <summary>Attribute to specify e-mail validation on a property, method or field.</summary>
            <remarks>This validator can be configured through code or through the configuration file. By default all domains and /or IP addresses are considered valid
            as long as their syntax is correct (note that IP addresses will only be considered valid if <see cref="P:Enkoni.Framework.DataAnnotations.EmailAttribute.AllowIPAddresses"/> is set to <see langword="true"/>). 
            <br/>
            To specifically include or exclude domains or IP addresses, two approaches can be used.<br/>
            <h3>Code</h3>
            By setting the <see cref="P:Enkoni.Framework.DataAnnotations.EmailAttribute.IncludeDomains"/> and/or <see cref="P:Enkoni.Framework.DataAnnotations.EmailAttribute.ExcludeDomains"/> properties, the white and black list of valid domains or IP addresses can be 
            manipulated. To specify multiple domains, separate the domains with a semi colon (';'). When setting both the <see cref="P:Enkoni.Framework.DataAnnotations.EmailAttribute.IncludeDomains"/>  and the
            <see cref="P:Enkoni.Framework.DataAnnotations.EmailAttribute.ExcludeDomains"/> properties, the values in <see cref="P:Enkoni.Framework.DataAnnotations.EmailAttribute.ExcludeDomains"/> takes precedence over the values in <see cref="P:Enkoni.Framework.DataAnnotations.EmailAttribute.IncludeDomains"/>.<br/>
            <br/>
            <h3>Configuration</h3>
            <para>All properties of the <see cref="T:Enkoni.Framework.DataAnnotations.EmailAttribute"/> except for the <see cref="P:Enkoni.Framework.DataAnnotations.EmailAttribute.Category"/> property can be set through configuration.
            First of all, the configuration section must be specified:</para>
            <code>
            <![CDATA[
            <configuration>
              <configSections>
                <section name="Enkoni.DataAnnotations" type="Enkoni.Framework.DataAnnotations.Configuration.ValidationSection, Enkoni.Framework.DataAnnotations"/>
              </configSections>
            </configuration>
            ]]>
            </code>
            <para>Then inside the section, the validator can be configured:</para>
            <code>
            <![CDATA[
            <Enkoni.DataAnnotations>
              <EmailValidator allowComments="false" allowIPAddresses="false" requireTopLevelDomain="false">
                <includeDomains>
                  <domain pattern="microsoft.com" />
                  <domain pattern="live.nl" />
                  <!-- Wildcards can be used to specify multiple domains. The wildcards * and ? are supported -->
                  <domain pattern="*.be" />
                </includeDomains>
                <excludeDomains>
                  <domain pattern="yahoo.com" />
                  <domain pattern="gmail.com" />
                  <!-- Wildcards can be used to specify multiple domains. The wildcards * and ? are supported -->
                  <domain pattern="yahoo.be" />
                </excludeDomains>
              </EmailValidator>
            </Enkoni.DataAnnotations>
            ]]>
            </code>
            <para>It is also possible to specify multiple configurations for different instances of validators by specifying the name attribute. At most one 
            nameless validator can be specified in the configuration. The nameless configuration will be used by validators that do not have a name specified 
            or whose name is not explicitly configured.</para>
            <code>
            <![CDATA[
            <Enkoni.DataAnnotations>
              <!-- Since this validator does not have a name specified, it will be used as the default configuration -->
              <EmailValidator allowComments="false" allowIPAdresses="false" />
              <!-- This configuration will only be applied to validators with the name "MyValidator" -->
              <EmailValidator name="MyValidator" allowComments="false" allowIPAddresses="true">
                <includeDomains>
                  <!--The add-tag can be used to include area codes -->
                  <domain pattern="192.168.*" />
                </includeDomains>
              </EmailValidator>
            </Enkoni.DataAnnotations>
            ]]>
            </code>
            </remarks>
        </member>
        <member name="F:Enkoni.Framework.DataAnnotations.EmailAttribute.DefaultName">
            <summary>Defines the default name for the validator.</summary>
        </member>
        <member name="F:Enkoni.Framework.DataAnnotations.EmailAttribute.configurationSectionName">
            <summary>Holds the name of the configuration section that must be used.</summary>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.EmailAttribute.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Enkoni.Framework.DataAnnotations.EmailAttribute"/> class.</summary>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.EmailAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:Enkoni.Framework.DataAnnotations.EmailAttribute"/> class.</summary>
            <param name="name">The name of the validator.</param>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.EmailAttribute.#ctor(System.Func{System.String})">
            <summary>Initializes a new instance of the <see cref="T:Enkoni.Framework.DataAnnotations.EmailAttribute"/> class.</summary>
            <param name="errorMessageAccessor">The function that enables access to validation resources.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="errorMessageAccessor"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.EmailAttribute.#ctor(System.String,System.Func{System.String})">
            <summary>Initializes a new instance of the <see cref="T:Enkoni.Framework.DataAnnotations.EmailAttribute"/> class.</summary>
            <param name="name">The name of the validator.</param>
            <param name="errorMessageAccessor">The function that enables access to validation resources.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="errorMessageAccessor"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.EmailAttribute.IsValid(System.Object)">
            <summary>Determines whether the specified value of the object is valid.</summary>
            <param name="value">The value of the object to validate.</param>
            <returns><see langword="true"/> if the specified value is valid; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.EmailAttribute.ValidateMailAddress(System.String,System.Text.RegularExpressions.Regex,System.Boolean,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>Validates whether the input is a valid e-mail address.</summary>
            <param name="input">The string that must be validated.</param>
            <param name="localPartRegex">The regular expression that must be used to validate the local part of the e-mail address.</param>
            <param name="allowComments">Indicates whether comments are allowed in the e-mail address.</param>
            <param name="allowIPAddresses">Indicates whether IP addresses are allowed in the e-mail address.</param>
            <param name="requireTopLevelDomain">Indicates whether a top level domain is required.</param>
            <param name="includeDomains">A semicolon separated list of domains that are white listed.</param>
            <param name="excludeDomains">A semicolon separated list of domains that are black listed.</param>
            <returns><see langword="true"/> is the input is valid; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.EmailAttribute.ValidateDomainPart(System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>Validates the domain part of an e-mail address.</summary>
            <param name="domainPart">The domain part of the e-mail address that must be validated.</param>
            <param name="allowComments">Indicates whether comments are allowed in the domain part.</param>
            <param name="allowIPAddresses">Indicates whether an IP address is allowed in the domain part.</param>
            <param name="requireTopLevelDomain">Indicates if a top level domain is required.</param>
            <param name="includeDomains">A semicolon separated list of domains that are white listed.</param>
            <param name="excludeDomains">A semicolon separated list of domains that are black listed.</param>
            <returns><see langword="true"/> if the domain part is valid; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.EmailAttribute.ValidateAgainstBlackList(System.String,System.String)">
            <summary>Validates the domain by checking if it matches a black listed domain.</summary>
            <param name="domain">The domain that must be validated.</param>
            <param name="excludeDomains">The black listed domains.</param>
            <returns><see langword="true"/> if the domain is valid; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.EmailAttribute.ValidateAgainstWhiteList(System.String,System.String)">
            <summary>Validates the domain by checking if it matches a white listed domain.</summary>
            <param name="domain">The domain that must be validated.</param>
            <param name="includeDomains">The white listed domains.</param>
            <returns><see langword="true"/> if the domain is valid; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.EmailAttribute.ValidateDomainPart(System.String,System.Boolean,System.Boolean,System.String@,System.Boolean@)">
            <summary>Validates the domain part of an e-mail address.</summary>
            <param name="domainPart">The domain part of the e-mail address that must be validated.</param>
            <param name="allowComments">Indicates whether comments are allowed in the domain part.</param>
            <param name="allowIPAddresses">Indicates whether an IP address is allowed in the domain part.</param>
            <param name="fullDomain">The actual domain that makes up the domain part.</param>
            <param name="isIPAddress">Holds a value that indicates if the domain is an IP address or a regular domain.</param>
            <returns><see langword="true"/> if the domain part is valid; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.EmailAttribute.LoadConfiguration">
            <summary>Initializes the properties with the values from the configuration.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.EmailAttribute.ConfigurationSectionName">
            <summary>Gets or sets the name of the configuration section that is used to preconfigure the validator. The default value is set to <see cref="F:Enkoni.Framework.DataAnnotations.Configuration.ValidationSection.DefaultSectionName"/>.
            </summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.EmailAttribute.Category">
            <summary>Gets or sets the categories of phone numbers that must be considered valid.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.EmailAttribute.Name">
            <summary>Gets the name of the validator.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.EmailAttribute.AllowComments">
            <summary>Gets or sets a value indicating whether comments are allowed in the e-mail address. Defaults to <see langword="false"/>.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.EmailAttribute.AllowIPAddresses">
            <summary>Gets or sets a value indicating whether IP addresses are allowed in the e-mail address. Defaults to <see langword="false"/>.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.EmailAttribute.RequireTopLevelDomain">
            <summary>Gets or sets a value indicating whether the domain part of the e-mail address must contain a top level domain. Defaults to <see langword="false"/>.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.EmailAttribute.IncludeDomains">
            <summary>Gets or sets the semicolon separated domains that are white listed.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.EmailAttribute.ExcludeDomains">
            <summary>Gets or sets the semicolon separated domains that are black listed.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.EmailAttribute.ConfiguredValues">
            <summary>Gets the values that were set through the configuration.</summary>
        </member>
        <member name="T:Enkoni.Framework.DataAnnotations.EmailAttribute.ConfiguredValuesContainer">
            <summary>Holds the values that were set through the configuration.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.EmailAttribute.ConfiguredValuesContainer.AllowComments">
            <summary>Gets or sets a value indicating whether the setting for 'AllowComments' was set to <see langword="true"/>.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.EmailAttribute.ConfiguredValuesContainer.AllowIPAddresses">
            <summary>Gets or sets a value indicating whether the setting for 'AllowIPAddresses' was set to <see langword="true"/>.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.EmailAttribute.ConfiguredValuesContainer.RequireTopLevelDomain">
            <summary>Gets or sets a value indicating whether the setting for 'RequireTopLevelDomain' was set to <see langword="true"/>.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.EmailAttribute.ConfiguredValuesContainer.IncludeDomains">
            <summary>Gets or sets the configured collection of white listed domains.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.EmailAttribute.ConfiguredValuesContainer.ExcludeDomains">
            <summary>Gets or sets the configured collection of black listed domains.</summary>
        </member>
        <member name="T:Enkoni.Framework.DataAnnotations.EmailAttribute.ConfiguredValuesSingletonContainer">
            <summary>Holds the singleton instance of the <see cref="T:Enkoni.Framework.DataAnnotations.EmailAttribute.ConfiguredValuesContainer"/> class.</summary>
            <remarks>This implementation is based on the article on Singletons by Jon Skeet (http://csharpindepth.com/Articles/General/Singleton.aspx).</remarks>
        </member>
        <member name="F:Enkoni.Framework.DataAnnotations.EmailAttribute.ConfiguredValuesSingletonContainer.ConfiguredValues">
            <summary>The actual singleton instance.</summary>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.EmailAttribute.ConfiguredValuesSingletonContainer.#cctor">
            <summary>Initializes static members of the <see cref="T:Enkoni.Framework.DataAnnotations.EmailAttribute.ConfiguredValuesSingletonContainer"/> class.</summary>
            <remarks>Even though this constructor does nothing by itself (it has an empty body), declaring this static constructor prevents the C# 
            compiler from marking this type as <c>beforefieldinit</c> which is required in order to get the laziness behavior that is intended.</remarks>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.EmailAttribute.ConfiguredValuesSingletonContainer.#ctor">
            <summary>Prevents a default instance of the <see cref="T:Enkoni.Framework.DataAnnotations.EmailAttribute.ConfiguredValuesSingletonContainer"/> class from being created.</summary>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.EmailAttribute.ConfiguredValuesSingletonContainer.ReadConfiguration(System.String)">
            <summary>Reads the configuration and sets the configured values.</summary>
            <param name="sectionName">The name of the config section that must be read. Use <see langword="null"/> or <see cref="F:System.String.Empty"/> to use the default section name.</param>
            <returns>The values that were read from the configuration or <see langword="null"/> if there was no configuration.</returns>
        </member>
        <member name="T:Enkoni.Framework.DataAnnotations.IbanAttribute">
            <summary>Attribute to specify IBAN account number validation on a property, method or field.</summary>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.IbanAttribute.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Enkoni.Framework.DataAnnotations.IbanAttribute"/> class.</summary>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.IbanAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:Enkoni.Framework.DataAnnotations.IbanAttribute"/> class.</summary>
            <param name="errorMessage">The error message to associate with a validation control.</param>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.IbanAttribute.#ctor(System.Func{System.String})">
            <summary>Initializes a new instance of the <see cref="T:Enkoni.Framework.DataAnnotations.IbanAttribute"/> class.</summary>
            <param name="errorMessageAccessor">The function that enables access to validation resources.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="errorMessageAccessor"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.IbanAttribute.IsValid(System.Object)">
            <summary>Determines whether the specified value of the object is valid.</summary>
            <param name="value">The value of the object to validate.</param>
            <returns><see langword="true"/> if the specified value is valid; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.IbanAttribute.ConvertToNumeric(System.String)">
            <summary>Converts a string into a numeric value by substituting the 'A' to 'Z' characters whit there numeric equivalents where 'A' equals '10',
            'B' equals '11' etcetera.</summary>
            <param name="text">The value that must be converted.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute">
            <summary>Performs validation on <see cref="T:System.String"/> instances by checking if they contain valid Dutch phone numbers.</summary>
            <remarks>This validator can be configured through code or through the configuration file. When the validator is configured to include the category 
            <see cref="F:Enkoni.Framework.DataAnnotations.PhoneNumberCategories.Regular"/> (which is the default setting), all area codes that are valid according to the Dutch 'numbering plan
            for phone and ISDN services' that was published at November 12th 2013 (<a href="http://wetten.overheid.nl/BWBR0010198/geldigheidsdatum_13-11-2013">link</a>).
            <br/>
            To override the validated area codes, two approaches can be used.<br/>
            <h3>Code</h3>
            By setting the <see cref="P:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.IncludeAreaCodes"/> and/or <see cref="P:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.ExcludeAreaCodes"/> properties, the collection of valid area codes can be 
            manipulated. To specify multiple area codes, separate the area codes with a semi colon (';'). When setting the <see cref="P:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.IncludeAreaCodes"/> 
            property, the default list of valid area codes will be ignored and only the specified area codes will be considered valid. Eg. when setting 
            <see cref="P:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.IncludeAreaCodes"/> to <c>"010;020;030"</c>, only phone numbers with those area codes will be considered valid.<br/>
            <br/>
            <h3>Configuration</h3>
            <para>All properties of the <see cref="T:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute"/> except for the <see cref="P:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.Categories"/> property can be set through configuration.
            First of all, the configuration section must be specified:</para>
            <code>
            <![CDATA[
            <configuration>
              <configSections>
                <section name="Enkoni.DataAnnotations" type="Enkoni.Framework.DataAnnotations.Configuration.ValidationSection, Enkoni.Framework.DataAnnotations"/>
              </configSections>
            </configuration>
            ]]>
            </code>
            <para>Then inside the section, the validator can be configured:</para>
            <code>
            <![CDATA[
            <Enkoni.DataAnnotations>
              <DutchPhoneNumber allowCountryCallingCode="false" allowCarrierPreselect="true">
                <areaCodes>
                  <clear /> <!-- The clear-tag is optional and will reset the default collection of area codes -->
                  <!--The add-tag can be used to include area codes -->
                  <add areaCode="010" />
                  <add areaCode="020" />
                  <add areaCode="030" />
                  <!-- The remove-tag can be used to exclude area codes -->
                  <remove areaCode="023" />
                  <remove areaCode="058" />
                </areaCodes>
              </DutchPhoneNumber>
            </Enkoni.DataAnnotations>
            ]]>
            </code>
            <para>It is also possible to specify multiple configurations for different instances of validators by specifying the name attribute. At most one 
            nameless validator can be specified in the configuration. The nameless configuration will be used by validators that do not have a name specified 
            or whose name is not explicitly configured.</para>
            <code>
            <![CDATA[
            <Enkoni.DataAnnotations>
              <!-- Since this validator does not have a name specified, it will be used as the default configuration -->
              <DutchPhoneNumber allowCountryCallingCode="false" allowCarrierPreselect="true">
                <areaCodes>
                  <clear /> <!-- The clear-tag is optional and will reset the default collection of area codes -->
                  <!--The add-tag can be used to include area codes -->
                  <add areaCode="010" />
                  <add areaCode="020" />
                  <add areaCode="030" />
                  <!-- The remove-tag can be used to exclude area codes -->
                  <remove areaCode="023" />
                  <remove areaCode="058" />
                </areaCodes>
              </DutchPhoneNumber>
              <!-- This configuration will only be applied to validators with the name "MyValidator" -->
              <DutchPhoneNumber name="MyValidator" allowCountryCallingCode="false" allowCarrierPreselect="true">
                <areaCodes>
                  <clear /> <!-- The clear-tag is optional and will reset the default collection of area codes -->
                  <!--The add-tag can be used to include area codes -->
                  <add areaCode="010" />
                  <add areaCode="020" />
                  <add areaCode="030" />
                  <!-- The remove-tag can be used to exclude area codes -->
                  <remove areaCode="023" />
                  <remove areaCode="058" />
                </areaCodes>
              </DutchPhoneNumber>
            </Enkoni.DataAnnotations>
            ]]>
            </code>
            </remarks>
        </member>
        <member name="F:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.DefaultName">
            <summary>Defines the default name for the validator.</summary>
        </member>
        <member name="F:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.configurationSectionName">
            <summary>Holds the name of the configuration section that must be used.</summary>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute"/> class.</summary>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute"/> class.</summary>
            <param name="name">The name for the validator.</param>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.#ctor(System.Func{System.String})">
            <summary>Initializes a new instance of the <see cref="T:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute"/> class.</summary>
            <param name="errorMessageAccessor">The function that enables access to validation resources.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="errorMessageAccessor"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.#ctor(System.String,System.Func{System.String})">
            <summary>Initializes a new instance of the <see cref="T:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute"/> class.</summary>
            <param name="name">The name of the validator.</param>
            <param name="errorMessageAccessor">The function that enables access to validation resources.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="errorMessageAccessor"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.IsValid(System.Object)">
            <summary>Determines whether the specified value of the object is valid.</summary>
            <param name="value">The value of the object to validate.</param>
            <returns><see langword="true"/> if the specified value is valid; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.ValidateServiceNumber(System.String)">
            <summary>Validates whether the input is a valid Dutch service phone number.</summary>
            <param name="input">The string that must be validated.</param>
            <returns><see langword="true"/> is the input is valid; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.ValidateEmergencyNumber(System.String)">
            <summary>Validates whether the input is a valid Dutch emergency phone number.</summary>
            <param name="input">The string that must be validated.</param>
            <returns><see langword="true"/> is the input is valid; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.ValidateMobileNumber(System.String,System.Boolean,System.Boolean)">
            <summary>Validates whether the input is a valid Dutch mobile phone number.</summary>
            <param name="input">The string that must be validated.</param>
            <param name="allowCountryCallingCode">Indicates whether the country calling code is allowed in the phone number.</param>
            <param name="allowCarrierPreselect">Indicates whether a carrier preselect code is allowed in the phone number.</param>
            <returns><see langword="true"/> is the input is valid; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.ValidateOtherNumber(System.String,System.Boolean)">
            <summary>Validates whether the input is a valid Dutch phone number.</summary>
            <param name="input">The string that must be validated.</param>
            <param name="allowCarrierPreselect">Indicates whether a carrier preselect code is allowed in the phone number.</param>
            <returns><see langword="true"/> is the input is valid; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.ValidateRegularNumber(System.String,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>Validates whether the input is a valid Dutch regular phone number.</summary>
            <param name="input">The string that must be validated.</param>
            <param name="allowCountryCallingCode">Indicates whether the country calling code is allowed in the phone number.</param>
            <param name="allowCarrierPreselect">Indicates whether a carrier preselect code is allowed in the phone number.</param>
            <param name="includeAreaCodes">Overrides the area codes that are part of the regular expression.</param>
            <param name="excludeAreaCodes">The area codes that must be excluded from the standard list of area codes.</param>
            <returns><see langword="true"/> is the input is valid; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.LoadConfiguration">
            <summary>Initializes the properties with the values from the configuration.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.ConfigurationSectionName">
            <summary>Gets or sets the name of the configuration section that is used to preconfigure the validator. The default value is set to <see cref="F:Enkoni.Framework.DataAnnotations.Configuration.ValidationSection.DefaultSectionName"/>.
            </summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.Name">
            <summary>Gets the name of the validator.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.Categories">
            <summary>Gets or sets the categories of phone numbers that must be considered valid.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.AllowCountryCallingCode">
            <summary>Gets or sets a value indicating whether the international dialing prefix and country calling code (eg. 0031 or +31) code is allowed 
            in the phone number. Defaults to <see langword="true"/>.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.AllowCarrierPreselect">
            <summary>Gets or sets a value indicating whether a carrier preselect code (eg. 1642) code is allowed in the phone number. Defaults to
            <see langword="false"/>.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.IncludeAreaCodes">
            <summary>Gets or sets the semicolon separated area codes that are considered valid. This overrides the default area codes for this validator.
            </summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.ExcludeAreaCodes">
            <summary>Gets or sets the semicolon separated area codes that are considered invalid.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.ConfiguredValues">
            <summary>Gets the values that were set through the configuration.</summary>
        </member>
        <member name="T:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.ConfiguredValuesContainer">
            <summary>Holds the values that were set through the configuration.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.ConfiguredValuesContainer.AllowCountryCallingCode">
            <summary>Gets or sets a value indicating whether the setting for 'AllowCountryCallingCode' was set to <see langword="true"/>.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.ConfiguredValuesContainer.AllowCarrierPreselect">
            <summary>Gets or sets a value indicating whether the setting for 'AllowCarrierPreselect' was set to <see langword="true"/>.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.ConfiguredValuesContainer.AreaCodesOverridden">
            <summary>Gets or sets a value indicating whether the collection of area codes were overridden through configuration.</summary>
        </member>
        <member name="P:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.ConfiguredValuesContainer.AreaCodes">
            <summary>Gets or sets the configured collection of area codes.</summary>
        </member>
        <member name="T:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.ConfiguredValuesSingletonContainer">
            <summary>Holds the singleton instance of the <see cref="T:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.ConfiguredValuesContainer"/> class.</summary>
            <remarks>This implementation is based on the article on Singletons by Jon Skeet (http://csharpindepth.com/Articles/General/Singleton.aspx).</remarks>
        </member>
        <member name="F:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.ConfiguredValuesSingletonContainer.ConfiguredValues">
            <summary>The actual singleton instance.</summary>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.ConfiguredValuesSingletonContainer.#cctor">
            <summary>Initializes static members of the <see cref="T:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.ConfiguredValuesSingletonContainer"/> class.</summary>
            <remarks>Even though this constructor does nothing by itself (it has an empty body), declaring this static constructor prevents the C# 
            compiler from marking this type as <c>beforefieldinit</c> which is required in order to get the laziness behavior that is intended.</remarks>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.ConfiguredValuesSingletonContainer.#ctor">
            <summary>Prevents a default instance of the <see cref="T:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.ConfiguredValuesSingletonContainer"/> class from being created.</summary>
        </member>
        <member name="M:Enkoni.Framework.DataAnnotations.DutchPhoneNumberAttribute.ConfiguredValuesSingletonContainer.ReadConfiguration(System.String)">
            <summary>Reads the configuration and sets the configured values.</summary>
            <param name="sectionName">The name of the config section that must be read. Use <see langword="null"/> or <see cref="F:System.String.Empty"/> to use the default section name.</param>
            <returns>The values that were read from the configuration or <see langword="null"/> if there was no configuration.</returns>
        </member>
    </members>
</doc>
