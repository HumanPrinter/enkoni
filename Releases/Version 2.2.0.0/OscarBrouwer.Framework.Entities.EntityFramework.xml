<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OscarBrouwer.Framework.Entities.EntityFramework</name>
    </assembly>
    <members>
        <member name="T:OscarBrouwer.Framework.Entities.EntityFramework.ShallowEntityFrameworkRepository`1">
            <summary>This class extends the abstract <see cref="T:OscarBrouwer.Framework.Entities.EntityFramework.EntityFrameworkRepository`1"/> class and implements some of
            the functionality using the Entity Framework. The repository can be used for types that only need to be created, but
            not saved or retrieved as this is done by the parent-type's repository.</summary>
            <typeparam name="TEntity">The type of the entity that is handled by this repository.</typeparam>
        </member>
        <member name="T:OscarBrouwer.Framework.Entities.EntityFramework.EntityFrameworkRepository`1">
            <summary>This abstract class extends the abstract <see cref="T:OscarBrouwer.Framework.Entities.Repository`1"/> class and implements some of the 
            functionality using the Entity Framework.</summary>
            <typeparam name="TEntity">The type of the entity that is handled by this repository.</typeparam>
        </member>
        <member name="T:OscarBrouwer.Framework.Entities.EntityFramework.IEntityFrameworkRepository">
            <summary>This interface is used as a marker by the RepositoryFactory.</summary>
        </member>
        <member name="M:OscarBrouwer.Framework.Entities.EntityFramework.IEntityFrameworkRepository.ReloadObjectContext(System.Data.Entity.DbContext)">
            <summary>Replaces the current DbContext with the specified one. The current DbContext is first disposed.
            </summary>
            <param name="dbContext">The new DbContext that must be used.</param>
        </member>
        <member name="M:OscarBrouwer.Framework.Entities.EntityFramework.EntityFrameworkRepository`1.#ctor(System.Data.Entity.DbContext)">
            <summary>Initializes a new instance of the <see cref="T:OscarBrouwer.Framework.Entities.EntityFramework.EntityFrameworkRepository`1"/> class 
            using the specified <see cref="P:OscarBrouwer.Framework.Entities.EntityFramework.EntityFrameworkRepository`1.DbContext"/>.</summary>
            <param name="dbContext">The dbcontext that must be used to access the database.</param>
        </member>
        <member name="M:OscarBrouwer.Framework.Entities.EntityFramework.EntityFrameworkRepository`1.ReloadObjectContext(System.Data.Entity.DbContext)">
            <summary>Replaces the current DbContext with the specified one. The current DbContext is first disposed.
            </summary>
            <param name="dbContext">The new DbContext that must be used.</param>
        </member>
        <member name="M:OscarBrouwer.Framework.Entities.EntityFramework.EntityFrameworkRepository`1.SaveChangesCore">
            <summary>Submits all the changes to the database.</summary>
        </member>
        <member name="M:OscarBrouwer.Framework.Entities.EntityFramework.EntityFrameworkRepository`1.CreateEntityCore">
            <summary>Creates a new entity of type <typeparamref name="TEntity"/>. This is done by calling the default
            constructor of <typeparamref name="TEntity"/>.</summary>
            <returns>The created entity.</returns>
        </member>
        <member name="M:OscarBrouwer.Framework.Entities.EntityFramework.EntityFrameworkRepository`1.AddEntityCore(`0)">
            <summary>Inserts a new entity to the repository.</summary>
            <param name="entity">The entity that must be added.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="entity"/> is <see langword="null"/>.</exception>
            <returns>The entity with the most recent values.</returns>
        </member>
        <member name="M:OscarBrouwer.Framework.Entities.EntityFramework.EntityFrameworkRepository`1.UpdateEntityCore(`0)">
            <summary>Updates the repository with the changes made to <paramref name="entity"/>. Since the entity framework 
            already monitors the state of entities, no additional functionality is required. This method is therefore empty.
            </summary>
            <param name="entity">The entity that was updated.</param>
            <returns>The entity with the most recent values.</returns>
        </member>
        <member name="M:OscarBrouwer.Framework.Entities.EntityFramework.EntityFrameworkRepository`1.DeleteEntityCore(`0)">
            <summary>Deletes an entity from the repository.</summary>
            <param name="entity">The entity that must be deleted.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="entity"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:OscarBrouwer.Framework.Entities.EntityFramework.EntityFrameworkRepository`1.CreateLikeExpressionCore">
            <summary>Creates an expression that can be used to perform a 'Like' operation.</summary>
            <returns>The created expression.</returns>
        </member>
        <member name="M:OscarBrouwer.Framework.Entities.EntityFramework.EntityFrameworkRepository`1.FindAllCore">
            <summary>Finds all the entities of type <typeparamref name="TEntity"/>.</summary>
            <returns>All the available entities.</returns>
        </member>
        <member name="M:OscarBrouwer.Framework.Entities.EntityFramework.EntityFrameworkRepository`1.FindAllCore(System.Func{`0,System.Boolean})">
            <summary>Finds all the available entities that match the specified expression.</summary>
            <param name="expression">The expression to which the entities must match.</param>
            <returns>The entities that match the specified expression.</returns>
        </member>
        <member name="M:OscarBrouwer.Framework.Entities.EntityFramework.EntityFrameworkRepository`1.FindSingleCore(System.Func{`0,System.Boolean})">
            <summary>Finds a single entity that matches the expression.</summary>
            <param name="expression">The expression to which the entity must match.</param>
            <returns>The found entity.</returns>
        </member>
        <member name="M:OscarBrouwer.Framework.Entities.EntityFramework.EntityFrameworkRepository`1.FindSingleCore(System.Func{`0,System.Boolean},`0)">
            <summary>Finds a single entity that matches the expression. If no result was found, the specified default-value
            is returned.</summary>
            <param name="expression">The expression to which the entity must match.</param>
            <param name="defaultValue">The value that will be returned when no match was found.</param>
            <returns>The found entity or <paramref name="defaultValue"/> if there was no result.</returns>
        </member>
        <member name="M:OscarBrouwer.Framework.Entities.EntityFramework.EntityFrameworkRepository`1.FindFirstCore(System.Func{`0,System.Boolean})">
            <summary>Finds the first entity that matches the expression.</summary>
            <param name="expression">The expression to which the entity must match.</param>
            <returns>The found entity.</returns>
        </member>
        <member name="M:OscarBrouwer.Framework.Entities.EntityFramework.EntityFrameworkRepository`1.FindFirstCore(System.Func{`0,System.Boolean},`0)">
            <summary>Finds the first entity that matches the expression. If no result was found, the specified default-value
            is returned.</summary>
            <param name="expression">The expression to which the entity must match.</param>
            <param name="defaultValue">The value that will be returned when no match was found.</param>
            <returns>The found entity or <paramref name="defaultValue"/> if there was no result.</returns>
        </member>
        <member name="P:OscarBrouwer.Framework.Entities.EntityFramework.EntityFrameworkRepository`1.DbContext">
            <summary>Gets the ObjectContext that is used to access the database.</summary>
        </member>
        <member name="P:OscarBrouwer.Framework.Entities.EntityFramework.EntityFrameworkRepository`1.SinglePositionWildcard">
            <summary>Gets the wildcard that is used to match a single character.</summary>
        </member>
        <member name="P:OscarBrouwer.Framework.Entities.EntityFramework.EntityFrameworkRepository`1.MultiplePositionWildcard">
            <summary>Gets the wildcard that is used to match zero or more character.</summary>
        </member>
        <member name="M:OscarBrouwer.Framework.Entities.EntityFramework.ShallowEntityFrameworkRepository`1.#ctor(System.Data.Entity.DbContext)">
            <summary>Initializes a new instance of the <see cref="T:OscarBrouwer.Framework.Entities.EntityFramework.ShallowEntityFrameworkRepository`1"/> class using the
            specified <see cref="T:System.Data.Entity.DbContext"/>.</summary>
            <param name="dbContext">The DbContext that must be used to access the database.</param>
        </member>
        <member name="M:OscarBrouwer.Framework.Entities.EntityFramework.ShallowEntityFrameworkRepository`1.AddEntityCore(`0)">
            <summary>Since addition of entities will be handled by the parent entity's repository, nothing is done here.
            </summary>
            <param name="entity">The entity that is to be added.</param>
            <returns>The entity with the most recent values.</returns>
        </member>
        <member name="M:OscarBrouwer.Framework.Entities.EntityFramework.ShallowEntityFrameworkRepository`1.UpdateEntityCore(`0)">
            <summary>Since updating of entities will be handled by the parent entity's repository, nothing is done here.
            </summary>
            <param name="entity">The entity that is to be updated.</param>
            <returns>The entity with the most recent values.</returns>
        </member>
        <member name="M:OscarBrouwer.Framework.Entities.EntityFramework.ShallowEntityFrameworkRepository`1.DeleteEntityCore(`0)">
            <summary>Since deletion of entities will be handled by the parent entity's repository, nothing is done here.
            </summary>
            <param name="entity">The entity that is to be deleted.</param>
        </member>
        <member name="M:OscarBrouwer.Framework.Entities.EntityFramework.ShallowEntityFrameworkRepository`1.SaveChangesCore">
            <summary>Since any changes to these entities will be handled by the parent entity's repository, nothing is done 
            here.</summary>
        </member>
        <member name="M:OscarBrouwer.Framework.Entities.EntityFramework.ShallowEntityFrameworkRepository`1.FindAllCore">
            <summary>Since retrieval of these entities is handled by the parent entity's repository, this method throws a
            <see cref="T:System.NotSupportedException"/>.</summary>
            <returns>Not applicable.</returns>
            <exception cref="T:System.NotSupportedException">Always.</exception>
        </member>
        <member name="M:OscarBrouwer.Framework.Entities.EntityFramework.ShallowEntityFrameworkRepository`1.FindAllCore(System.Func{`0,System.Boolean})">
            <summary>Since retrieval of these entities is handled by the parent entity's repository, this method throws a
            <see cref="T:System.NotSupportedException"/>.</summary>
            <param name="expression">The parameter is not used.</param>
            <returns>Not applicable.</returns>
            <exception cref="T:System.NotSupportedException">Always.</exception>
        </member>
        <member name="M:OscarBrouwer.Framework.Entities.EntityFramework.ShallowEntityFrameworkRepository`1.FindFirstCore(System.Func{`0,System.Boolean})">
            <summary>Since retrieval of the entity is handled by the parent entity's repository, this method throws a
            <see cref="T:System.NotSupportedException"/>.</summary>
            <param name="expression">The parameter is not used.</param>
            <returns>Not applicable.</returns>
            <exception cref="T:System.NotSupportedException">Always.</exception>
        </member>
        <member name="M:OscarBrouwer.Framework.Entities.EntityFramework.ShallowEntityFrameworkRepository`1.FindFirstCore(System.Func{`0,System.Boolean},`0)">
            <summary>Since retrieval of the entity is handled by the parent entity's repository, this method throws a
            <see cref="T:System.NotSupportedException"/>.</summary>
            <param name="expression">The parameter is not used.</param>
            <param name="defaultValue">The parameter is not used.</param>
            <returns>Not applicable.</returns>
            <exception cref="T:System.NotSupportedException">Always.</exception>
        </member>
        <member name="M:OscarBrouwer.Framework.Entities.EntityFramework.ShallowEntityFrameworkRepository`1.FindSingleCore(System.Func{`0,System.Boolean})">
            <summary>Since retrieval of the entity is handled by the parent entity's repository, this method throws a
            <see cref="T:System.NotSupportedException"/>.</summary>
            <param name="expression">The parameter is not used.</param>
            <returns>Not applicable.</returns>
            <exception cref="T:System.NotSupportedException">Always.</exception>
        </member>
        <member name="M:OscarBrouwer.Framework.Entities.EntityFramework.ShallowEntityFrameworkRepository`1.FindSingleCore(System.Func{`0,System.Boolean},`0)">
            <summary>Since retrieval of the entity is handled by the parent entity's repository, this method throws a
            <see cref="T:System.NotSupportedException"/>.</summary>
            <param name="expression">The parameter is not used.</param>
            <param name="defaultValue">The parameter is not used.</param>
            <returns>Not applicable.</returns>
            <exception cref="T:System.NotSupportedException">Always.</exception>
        </member>
    </members>
</doc>
